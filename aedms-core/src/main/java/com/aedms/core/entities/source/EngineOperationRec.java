package com.aedms.core.entities.source;

import com.aedms.core.entities.AedmsEntity;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;

import fr.lteconsulting.Mandatory;
import fr.lteconsulting.UseBuilderGenerator;
import org.joda.beans.BeanDefinition;
import org.joda.beans.PropertyDefinition;
import java.util.Map;
import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

@Entity
@Table(name = "ENGINE_OPR_REC")
@BeanDefinition
public class EngineOperationRec extends AedmsEntity{

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID")
    @PropertyDefinition
    private long id;

    @Column(name = "TSN")
    @PropertyDefinition
    private Double TSN;

    @Column(name = "CSN")
    @PropertyDefinition
    private Integer CSN;

    @Column(name = "TSO")
    @PropertyDefinition
    private Double TSO;

    @Column(name = "CSO")
    @PropertyDefinition
    private Integer CSO;
    
    @Column(name = "INSTALL_FH")
    @PropertyDefinition
    private Double hrsPostInst;

    @Column(name = "INSTALL_FC")
    @PropertyDefinition
    private Integer cirsPostInst;

    @Column(name = "REMAIN_FH")
    @PropertyDefinition
    private Double remainHrs;

    @Column(name = "REMAIN_FC")
    @PropertyDefinition
    private Integer remainCirs;

    @Column(name = "RECORD_DATE")
    @Temporal(javax.persistence.TemporalType.DATE)
    @PropertyDefinition
    private Date recordDate;

    @ManyToOne
    @JoinColumn(name="ENGINE_ID", nullable=false)
    @PropertyDefinition
    private Engine engine;
    
    /**Construct list block*/
    public EngineOperationRec(){}
    
    
    @UseBuilderGenerator
    public EngineOperationRec(@Mandatory Double tSN, @Mandatory  Integer cSN, Double tSO, Integer cSO, Double hrsPostInst,
            Integer cirsPostInst, Double remainHrs, Integer remainCirs, Date recordDate, @Mandatory  Engine engine) {
        super();
        TSN = tSN;
        CSN = cSN;
        TSO = tSO;
        CSO = cSO;
        this.hrsPostInst = hrsPostInst;
        this.cirsPostInst = cirsPostInst;
        this.remainHrs = remainHrs;
        this.remainCirs = remainCirs;
        this.recordDate = recordDate;
        this.engine = engine;
    }
    //------------------------- AUTOGENERATED START -------------------------
    ///CLOVER:OFF
    /**
     * The meta-bean for {@code EngineOperationRec}.
     * @return the meta-bean, not null
     */
    public static EngineOperationRec.Meta meta() {
        return EngineOperationRec.Meta.INSTANCE;
    }

    static {
        JodaBeanUtils.registerMetaBean(EngineOperationRec.Meta.INSTANCE);
    }

    @Override
    public EngineOperationRec.Meta metaBean() {
        return EngineOperationRec.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the id.
     * @return the value of the property
     */
    public long getId() {
        return id;
    }

    /**
     * Sets the id.
     * @param id  the new value of the property
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * Gets the the {@code id} property.
     * @return the property, not null
     */
    public final Property<Long> id() {
        return metaBean().id().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the TSN.
     * @return the value of the property
     */
    public Double getTSN() {
        return TSN;
    }

    /**
     * Sets the TSN.
     * @param TSN  the new value of the property
     */
    public void setTSN(Double TSN) {
        this.TSN = TSN;
    }

    /**
     * Gets the the {@code TSN} property.
     * @return the property, not null
     */
    public final Property<Double> TSN() {
        return metaBean().TSN().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the CSN.
     * @return the value of the property
     */
    public Integer getCSN() {
        return CSN;
    }

    /**
     * Sets the CSN.
     * @param CSN  the new value of the property
     */
    public void setCSN(Integer CSN) {
        this.CSN = CSN;
    }

    /**
     * Gets the the {@code CSN} property.
     * @return the property, not null
     */
    public final Property<Integer> CSN() {
        return metaBean().CSN().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the TSO.
     * @return the value of the property
     */
    public Double getTSO() {
        return TSO;
    }

    /**
     * Sets the TSO.
     * @param TSO  the new value of the property
     */
    public void setTSO(Double TSO) {
        this.TSO = TSO;
    }

    /**
     * Gets the the {@code TSO} property.
     * @return the property, not null
     */
    public final Property<Double> TSO() {
        return metaBean().TSO().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the CSO.
     * @return the value of the property
     */
    public Integer getCSO() {
        return CSO;
    }

    /**
     * Sets the CSO.
     * @param CSO  the new value of the property
     */
    public void setCSO(Integer CSO) {
        this.CSO = CSO;
    }

    /**
     * Gets the the {@code CSO} property.
     * @return the property, not null
     */
    public final Property<Integer> CSO() {
        return metaBean().CSO().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the hrsPostInst.
     * @return the value of the property
     */
    public Double getHrsPostInst() {
        return hrsPostInst;
    }

    /**
     * Sets the hrsPostInst.
     * @param hrsPostInst  the new value of the property
     */
    public void setHrsPostInst(Double hrsPostInst) {
        this.hrsPostInst = hrsPostInst;
    }

    /**
     * Gets the the {@code hrsPostInst} property.
     * @return the property, not null
     */
    public final Property<Double> hrsPostInst() {
        return metaBean().hrsPostInst().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the cirsPostInst.
     * @return the value of the property
     */
    public Integer getCirsPostInst() {
        return cirsPostInst;
    }

    /**
     * Sets the cirsPostInst.
     * @param cirsPostInst  the new value of the property
     */
    public void setCirsPostInst(Integer cirsPostInst) {
        this.cirsPostInst = cirsPostInst;
    }

    /**
     * Gets the the {@code cirsPostInst} property.
     * @return the property, not null
     */
    public final Property<Integer> cirsPostInst() {
        return metaBean().cirsPostInst().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the remainHrs.
     * @return the value of the property
     */
    public Double getRemainHrs() {
        return remainHrs;
    }

    /**
     * Sets the remainHrs.
     * @param remainHrs  the new value of the property
     */
    public void setRemainHrs(Double remainHrs) {
        this.remainHrs = remainHrs;
    }

    /**
     * Gets the the {@code remainHrs} property.
     * @return the property, not null
     */
    public final Property<Double> remainHrs() {
        return metaBean().remainHrs().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the remainCirs.
     * @return the value of the property
     */
    public Integer getRemainCirs() {
        return remainCirs;
    }

    /**
     * Sets the remainCirs.
     * @param remainCirs  the new value of the property
     */
    public void setRemainCirs(Integer remainCirs) {
        this.remainCirs = remainCirs;
    }

    /**
     * Gets the the {@code remainCirs} property.
     * @return the property, not null
     */
    public final Property<Integer> remainCirs() {
        return metaBean().remainCirs().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the recordDate.
     * @return the value of the property
     */
    public Date getRecordDate() {
        return recordDate;
    }

    /**
     * Sets the recordDate.
     * @param recordDate  the new value of the property
     */
    public void setRecordDate(Date recordDate) {
        this.recordDate = recordDate;
    }

    /**
     * Gets the the {@code recordDate} property.
     * @return the property, not null
     */
    public final Property<Date> recordDate() {
        return metaBean().recordDate().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the engine.
     * @return the value of the property
     */
    public Engine getEngine() {
        return engine;
    }

    /**
     * Sets the engine.
     * @param engine  the new value of the property
     */
    public void setEngine(Engine engine) {
        this.engine = engine;
    }

    /**
     * Gets the the {@code engine} property.
     * @return the property, not null
     */
    public final Property<Engine> engine() {
        return metaBean().engine().createProperty(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public EngineOperationRec clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            EngineOperationRec other = (EngineOperationRec) obj;
            return (getId() == other.getId()) &&
                    JodaBeanUtils.equal(getTSN(), other.getTSN()) &&
                    JodaBeanUtils.equal(getCSN(), other.getCSN()) &&
                    JodaBeanUtils.equal(getTSO(), other.getTSO()) &&
                    JodaBeanUtils.equal(getCSO(), other.getCSO()) &&
                    JodaBeanUtils.equal(getHrsPostInst(), other.getHrsPostInst()) &&
                    JodaBeanUtils.equal(getCirsPostInst(), other.getCirsPostInst()) &&
                    JodaBeanUtils.equal(getRemainHrs(), other.getRemainHrs()) &&
                    JodaBeanUtils.equal(getRemainCirs(), other.getRemainCirs()) &&
                    JodaBeanUtils.equal(getRecordDate(), other.getRecordDate()) &&
                    JodaBeanUtils.equal(getEngine(), other.getEngine()) &&
                    super.equals(obj);
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = hash * 31 + JodaBeanUtils.hashCode(getId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getTSN());
        hash = hash * 31 + JodaBeanUtils.hashCode(getCSN());
        hash = hash * 31 + JodaBeanUtils.hashCode(getTSO());
        hash = hash * 31 + JodaBeanUtils.hashCode(getCSO());
        hash = hash * 31 + JodaBeanUtils.hashCode(getHrsPostInst());
        hash = hash * 31 + JodaBeanUtils.hashCode(getCirsPostInst());
        hash = hash * 31 + JodaBeanUtils.hashCode(getRemainHrs());
        hash = hash * 31 + JodaBeanUtils.hashCode(getRemainCirs());
        hash = hash * 31 + JodaBeanUtils.hashCode(getRecordDate());
        hash = hash * 31 + JodaBeanUtils.hashCode(getEngine());
        return hash ^ super.hashCode();
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(384);
        buf.append("EngineOperationRec{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    @Override
    protected void toString(StringBuilder buf) {
        super.toString(buf);
        buf.append("id").append('=').append(JodaBeanUtils.toString(getId())).append(',').append(' ');
        buf.append("TSN").append('=').append(JodaBeanUtils.toString(getTSN())).append(',').append(' ');
        buf.append("CSN").append('=').append(JodaBeanUtils.toString(getCSN())).append(',').append(' ');
        buf.append("TSO").append('=').append(JodaBeanUtils.toString(getTSO())).append(',').append(' ');
        buf.append("CSO").append('=').append(JodaBeanUtils.toString(getCSO())).append(',').append(' ');
        buf.append("hrsPostInst").append('=').append(JodaBeanUtils.toString(getHrsPostInst())).append(',').append(' ');
        buf.append("cirsPostInst").append('=').append(JodaBeanUtils.toString(getCirsPostInst())).append(',').append(' ');
        buf.append("remainHrs").append('=').append(JodaBeanUtils.toString(getRemainHrs())).append(',').append(' ');
        buf.append("remainCirs").append('=').append(JodaBeanUtils.toString(getRemainCirs())).append(',').append(' ');
        buf.append("recordDate").append('=').append(JodaBeanUtils.toString(getRecordDate())).append(',').append(' ');
        buf.append("engine").append('=').append(JodaBeanUtils.toString(getEngine())).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code EngineOperationRec}.
     */
    public static class Meta extends AedmsEntity.Meta {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code id} property.
         */
        private final MetaProperty<Long> id = DirectMetaProperty.ofReadWrite(
                this, "id", EngineOperationRec.class, Long.TYPE);
        /**
         * The meta-property for the {@code TSN} property.
         */
        private final MetaProperty<Double> TSN = DirectMetaProperty.ofReadWrite(
                this, "TSN", EngineOperationRec.class, Double.class);
        /**
         * The meta-property for the {@code CSN} property.
         */
        private final MetaProperty<Integer> CSN = DirectMetaProperty.ofReadWrite(
                this, "CSN", EngineOperationRec.class, Integer.class);
        /**
         * The meta-property for the {@code TSO} property.
         */
        private final MetaProperty<Double> TSO = DirectMetaProperty.ofReadWrite(
                this, "TSO", EngineOperationRec.class, Double.class);
        /**
         * The meta-property for the {@code CSO} property.
         */
        private final MetaProperty<Integer> CSO = DirectMetaProperty.ofReadWrite(
                this, "CSO", EngineOperationRec.class, Integer.class);
        /**
         * The meta-property for the {@code hrsPostInst} property.
         */
        private final MetaProperty<Double> hrsPostInst = DirectMetaProperty.ofReadWrite(
                this, "hrsPostInst", EngineOperationRec.class, Double.class);
        /**
         * The meta-property for the {@code cirsPostInst} property.
         */
        private final MetaProperty<Integer> cirsPostInst = DirectMetaProperty.ofReadWrite(
                this, "cirsPostInst", EngineOperationRec.class, Integer.class);
        /**
         * The meta-property for the {@code remainHrs} property.
         */
        private final MetaProperty<Double> remainHrs = DirectMetaProperty.ofReadWrite(
                this, "remainHrs", EngineOperationRec.class, Double.class);
        /**
         * The meta-property for the {@code remainCirs} property.
         */
        private final MetaProperty<Integer> remainCirs = DirectMetaProperty.ofReadWrite(
                this, "remainCirs", EngineOperationRec.class, Integer.class);
        /**
         * The meta-property for the {@code recordDate} property.
         */
        private final MetaProperty<Date> recordDate = DirectMetaProperty.ofReadWrite(
                this, "recordDate", EngineOperationRec.class, Date.class);
        /**
         * The meta-property for the {@code engine} property.
         */
        private final MetaProperty<Engine> engine = DirectMetaProperty.ofReadWrite(
                this, "engine", EngineOperationRec.class, Engine.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, (DirectMetaPropertyMap) super.metaPropertyMap(),
                "id",
                "TSN",
                "CSN",
                "TSO",
                "CSO",
                "hrsPostInst",
                "cirsPostInst",
                "remainHrs",
                "remainCirs",
                "recordDate",
                "engine");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return id;
                case 83375:  // TSN
                    return TSN;
                case 67038:  // CSN
                    return CSN;
                case 83376:  // TSO
                    return TSO;
                case 67039:  // CSO
                    return CSO;
                case 290415311:  // hrsPostInst
                    return hrsPostInst;
                case -1612248755:  // cirsPostInst
                    return cirsPostInst;
                case 869806749:  // remainHrs
                    return remainHrs;
                case 1194047923:  // remainCirs
                    return remainCirs;
                case 734412703:  // recordDate
                    return recordDate;
                case -1298662846:  // engine
                    return engine;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public BeanBuilder<? extends EngineOperationRec> builder() {
            return new DirectBeanBuilder<EngineOperationRec>(new EngineOperationRec());
        }

        @Override
        public Class<? extends EngineOperationRec> beanType() {
            return EngineOperationRec.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code id} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Long> id() {
            return id;
        }

        /**
         * The meta-property for the {@code TSN} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Double> TSN() {
            return TSN;
        }

        /**
         * The meta-property for the {@code CSN} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> CSN() {
            return CSN;
        }

        /**
         * The meta-property for the {@code TSO} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Double> TSO() {
            return TSO;
        }

        /**
         * The meta-property for the {@code CSO} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> CSO() {
            return CSO;
        }

        /**
         * The meta-property for the {@code hrsPostInst} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Double> hrsPostInst() {
            return hrsPostInst;
        }

        /**
         * The meta-property for the {@code cirsPostInst} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> cirsPostInst() {
            return cirsPostInst;
        }

        /**
         * The meta-property for the {@code remainHrs} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Double> remainHrs() {
            return remainHrs;
        }

        /**
         * The meta-property for the {@code remainCirs} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> remainCirs() {
            return remainCirs;
        }

        /**
         * The meta-property for the {@code recordDate} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Date> recordDate() {
            return recordDate;
        }

        /**
         * The meta-property for the {@code engine} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Engine> engine() {
            return engine;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return ((EngineOperationRec) bean).getId();
                case 83375:  // TSN
                    return ((EngineOperationRec) bean).getTSN();
                case 67038:  // CSN
                    return ((EngineOperationRec) bean).getCSN();
                case 83376:  // TSO
                    return ((EngineOperationRec) bean).getTSO();
                case 67039:  // CSO
                    return ((EngineOperationRec) bean).getCSO();
                case 290415311:  // hrsPostInst
                    return ((EngineOperationRec) bean).getHrsPostInst();
                case -1612248755:  // cirsPostInst
                    return ((EngineOperationRec) bean).getCirsPostInst();
                case 869806749:  // remainHrs
                    return ((EngineOperationRec) bean).getRemainHrs();
                case 1194047923:  // remainCirs
                    return ((EngineOperationRec) bean).getRemainCirs();
                case 734412703:  // recordDate
                    return ((EngineOperationRec) bean).getRecordDate();
                case -1298662846:  // engine
                    return ((EngineOperationRec) bean).getEngine();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    ((EngineOperationRec) bean).setId((Long) newValue);
                    return;
                case 83375:  // TSN
                    ((EngineOperationRec) bean).setTSN((Double) newValue);
                    return;
                case 67038:  // CSN
                    ((EngineOperationRec) bean).setCSN((Integer) newValue);
                    return;
                case 83376:  // TSO
                    ((EngineOperationRec) bean).setTSO((Double) newValue);
                    return;
                case 67039:  // CSO
                    ((EngineOperationRec) bean).setCSO((Integer) newValue);
                    return;
                case 290415311:  // hrsPostInst
                    ((EngineOperationRec) bean).setHrsPostInst((Double) newValue);
                    return;
                case -1612248755:  // cirsPostInst
                    ((EngineOperationRec) bean).setCirsPostInst((Integer) newValue);
                    return;
                case 869806749:  // remainHrs
                    ((EngineOperationRec) bean).setRemainHrs((Double) newValue);
                    return;
                case 1194047923:  // remainCirs
                    ((EngineOperationRec) bean).setRemainCirs((Integer) newValue);
                    return;
                case 734412703:  // recordDate
                    ((EngineOperationRec) bean).setRecordDate((Date) newValue);
                    return;
                case -1298662846:  // engine
                    ((EngineOperationRec) bean).setEngine((Engine) newValue);
                    return;
            }
            super.propertySet(bean, propertyName, newValue, quiet);
        }

    }

    ///CLOVER:ON
    //-------------------------- AUTOGENERATED END --------------------------
}
