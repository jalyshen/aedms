package com.aedms.core.entities.source;

import com.aedms.core.entities.AedmsEntity;
import java.util.Date;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;


import fr.lteconsulting.Mandatory;
import fr.lteconsulting.UseBuilderGenerator;
import org.joda.beans.BeanDefinition;
import org.joda.beans.PropertyDefinition;
import java.util.Map;
import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

/**
 * The Entity to representing APP information.
 * The physical table is "APU"
 * 
 * @author jaly
 */
@Entity
@Table(name = "APU")
//@Audited
@BeanDefinition
public class APU  extends AedmsEntity {

    private static final long serialVersionUID = 1L;
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID")
    @PropertyDefinition
    private long id;
    
    @Column(name = "MODEL")
    @PropertyDefinition
    private String model;
    
    @Column(name = "SN")
    @PropertyDefinition
    private String SN;
    
    @Column(name = "MANUFACTURE_DATE")
    @Temporal(javax.persistence.TemporalType.DATE)
    @PropertyDefinition
    private Date manufactureDate;
    
    @Column(name = "RENT_DATE")
    @Temporal(javax.persistence.TemporalType.DATE)
    @PropertyDefinition
    private Date rentDate;
    
    @Column(name = "LEASE_HOLD")
    @PropertyDefinition
    private String leaseHold;
    
    @Column(name = "LEASE_HOLDER")
    @PropertyDefinition
    private String leaseHolder;
    
    @Column(name = "OPR")
    @PropertyDefinition
    private String opr;
    
    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy = "apu")
    @PropertyDefinition
    private Set<APUStatusRec> apuStatusRecs;
    
    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy = "apu")
    @PropertyDefinition
    private Set<APUOperationRec> apuOperationRecs;
    
    @ManyToOne
    @JoinColumn(name = "AIRCRAFT_ID")
    @PropertyDefinition
    private AirCraft aircraft;
    
    /** Constructors list block */
    public APU(){}
    
    @UseBuilderGenerator
    public APU(@Mandatory String model, @Mandatory String sN, @Mandatory  Date manufactureDate, @Mandatory  Date rentDate, String leaseHold, String leaseHolder,
            String opr, Set<APUStatusRec> apuStatusRecs, Set<APUOperationRec> apuOperationRecs, @Mandatory  AirCraft aircraft) {
        super();
        this.model = model;
        SN = sN;
        this.manufactureDate = manufactureDate;
        this.rentDate = rentDate;
        this.leaseHold = leaseHold;
        this.leaseHolder = leaseHolder;
        this.opr = opr;
        this.apuStatusRecs = apuStatusRecs;
        this.apuOperationRecs = apuOperationRecs;
        this.aircraft = aircraft;
    }

    
    //------------------------- AUTOGENERATED START -------------------------
    ///CLOVER:OFF
    /**
     * The meta-bean for {@code APU}.
     * @return the meta-bean, not null
     */
    public static APU.Meta meta() {
        return APU.Meta.INSTANCE;
    }

    static {
        JodaBeanUtils.registerMetaBean(APU.Meta.INSTANCE);
    }

    @Override
    public APU.Meta metaBean() {
        return APU.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the id.
     * @return the value of the property
     */
    public long getId() {
        return id;
    }

    /**
     * Sets the id.
     * @param id  the new value of the property
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * Gets the the {@code id} property.
     * @return the property, not null
     */
    public final Property<Long> id() {
        return metaBean().id().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the model.
     * @return the value of the property
     */
    public String getModel() {
        return model;
    }

    /**
     * Sets the model.
     * @param model  the new value of the property
     */
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Gets the the {@code model} property.
     * @return the property, not null
     */
    public final Property<String> model() {
        return metaBean().model().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the SN.
     * @return the value of the property
     */
    public String getSN() {
        return SN;
    }

    /**
     * Sets the SN.
     * @param SN  the new value of the property
     */
    public void setSN(String SN) {
        this.SN = SN;
    }

    /**
     * Gets the the {@code SN} property.
     * @return the property, not null
     */
    public final Property<String> SN() {
        return metaBean().SN().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the manufactureDate.
     * @return the value of the property
     */
    public Date getManufactureDate() {
        return manufactureDate;
    }

    /**
     * Sets the manufactureDate.
     * @param manufactureDate  the new value of the property
     */
    public void setManufactureDate(Date manufactureDate) {
        this.manufactureDate = manufactureDate;
    }

    /**
     * Gets the the {@code manufactureDate} property.
     * @return the property, not null
     */
    public final Property<Date> manufactureDate() {
        return metaBean().manufactureDate().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the rentDate.
     * @return the value of the property
     */
    public Date getRentDate() {
        return rentDate;
    }

    /**
     * Sets the rentDate.
     * @param rentDate  the new value of the property
     */
    public void setRentDate(Date rentDate) {
        this.rentDate = rentDate;
    }

    /**
     * Gets the the {@code rentDate} property.
     * @return the property, not null
     */
    public final Property<Date> rentDate() {
        return metaBean().rentDate().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the leaseHold.
     * @return the value of the property
     */
    public String getLeaseHold() {
        return leaseHold;
    }

    /**
     * Sets the leaseHold.
     * @param leaseHold  the new value of the property
     */
    public void setLeaseHold(String leaseHold) {
        this.leaseHold = leaseHold;
    }

    /**
     * Gets the the {@code leaseHold} property.
     * @return the property, not null
     */
    public final Property<String> leaseHold() {
        return metaBean().leaseHold().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the leaseHolder.
     * @return the value of the property
     */
    public String getLeaseHolder() {
        return leaseHolder;
    }

    /**
     * Sets the leaseHolder.
     * @param leaseHolder  the new value of the property
     */
    public void setLeaseHolder(String leaseHolder) {
        this.leaseHolder = leaseHolder;
    }

    /**
     * Gets the the {@code leaseHolder} property.
     * @return the property, not null
     */
    public final Property<String> leaseHolder() {
        return metaBean().leaseHolder().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the opr.
     * @return the value of the property
     */
    public String getOpr() {
        return opr;
    }

    /**
     * Sets the opr.
     * @param opr  the new value of the property
     */
    public void setOpr(String opr) {
        this.opr = opr;
    }

    /**
     * Gets the the {@code opr} property.
     * @return the property, not null
     */
    public final Property<String> opr() {
        return metaBean().opr().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the apuStatusRecs.
     * @return the value of the property
     */
    public Set<APUStatusRec> getApuStatusRecs() {
        return apuStatusRecs;
    }

    /**
     * Sets the apuStatusRecs.
     * @param apuStatusRecs  the new value of the property
     */
    public void setApuStatusRecs(Set<APUStatusRec> apuStatusRecs) {
        this.apuStatusRecs = apuStatusRecs;
    }

    /**
     * Gets the the {@code apuStatusRecs} property.
     * @return the property, not null
     */
    public final Property<Set<APUStatusRec>> apuStatusRecs() {
        return metaBean().apuStatusRecs().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the apuOperationRecs.
     * @return the value of the property
     */
    public Set<APUOperationRec> getApuOperationRecs() {
        return apuOperationRecs;
    }

    /**
     * Sets the apuOperationRecs.
     * @param apuOperationRecs  the new value of the property
     */
    public void setApuOperationRecs(Set<APUOperationRec> apuOperationRecs) {
        this.apuOperationRecs = apuOperationRecs;
    }

    /**
     * Gets the the {@code apuOperationRecs} property.
     * @return the property, not null
     */
    public final Property<Set<APUOperationRec>> apuOperationRecs() {
        return metaBean().apuOperationRecs().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the aircraft.
     * @return the value of the property
     */
    public AirCraft getAircraft() {
        return aircraft;
    }

    /**
     * Sets the aircraft.
     * @param aircraft  the new value of the property
     */
    public void setAircraft(AirCraft aircraft) {
        this.aircraft = aircraft;
    }

    /**
     * Gets the the {@code aircraft} property.
     * @return the property, not null
     */
    public final Property<AirCraft> aircraft() {
        return metaBean().aircraft().createProperty(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public APU clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            APU other = (APU) obj;
            return (getId() == other.getId()) &&
                    JodaBeanUtils.equal(getModel(), other.getModel()) &&
                    JodaBeanUtils.equal(getSN(), other.getSN()) &&
                    JodaBeanUtils.equal(getManufactureDate(), other.getManufactureDate()) &&
                    JodaBeanUtils.equal(getRentDate(), other.getRentDate()) &&
                    JodaBeanUtils.equal(getLeaseHold(), other.getLeaseHold()) &&
                    JodaBeanUtils.equal(getLeaseHolder(), other.getLeaseHolder()) &&
                    JodaBeanUtils.equal(getOpr(), other.getOpr()) &&
                    JodaBeanUtils.equal(getApuStatusRecs(), other.getApuStatusRecs()) &&
                    JodaBeanUtils.equal(getApuOperationRecs(), other.getApuOperationRecs()) &&
                    JodaBeanUtils.equal(getAircraft(), other.getAircraft()) &&
                    super.equals(obj);
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = hash * 31 + JodaBeanUtils.hashCode(getId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getModel());
        hash = hash * 31 + JodaBeanUtils.hashCode(getSN());
        hash = hash * 31 + JodaBeanUtils.hashCode(getManufactureDate());
        hash = hash * 31 + JodaBeanUtils.hashCode(getRentDate());
        hash = hash * 31 + JodaBeanUtils.hashCode(getLeaseHold());
        hash = hash * 31 + JodaBeanUtils.hashCode(getLeaseHolder());
        hash = hash * 31 + JodaBeanUtils.hashCode(getOpr());
        hash = hash * 31 + JodaBeanUtils.hashCode(getApuStatusRecs());
        hash = hash * 31 + JodaBeanUtils.hashCode(getApuOperationRecs());
        hash = hash * 31 + JodaBeanUtils.hashCode(getAircraft());
        return hash ^ super.hashCode();
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(384);
        buf.append("APU{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    @Override
    protected void toString(StringBuilder buf) {
        super.toString(buf);
        buf.append("id").append('=').append(JodaBeanUtils.toString(getId())).append(',').append(' ');
        buf.append("model").append('=').append(JodaBeanUtils.toString(getModel())).append(',').append(' ');
        buf.append("SN").append('=').append(JodaBeanUtils.toString(getSN())).append(',').append(' ');
        buf.append("manufactureDate").append('=').append(JodaBeanUtils.toString(getManufactureDate())).append(',').append(' ');
        buf.append("rentDate").append('=').append(JodaBeanUtils.toString(getRentDate())).append(',').append(' ');
        buf.append("leaseHold").append('=').append(JodaBeanUtils.toString(getLeaseHold())).append(',').append(' ');
        buf.append("leaseHolder").append('=').append(JodaBeanUtils.toString(getLeaseHolder())).append(',').append(' ');
        buf.append("opr").append('=').append(JodaBeanUtils.toString(getOpr())).append(',').append(' ');
        buf.append("apuStatusRecs").append('=').append(JodaBeanUtils.toString(getApuStatusRecs())).append(',').append(' ');
        buf.append("apuOperationRecs").append('=').append(JodaBeanUtils.toString(getApuOperationRecs())).append(',').append(' ');
        buf.append("aircraft").append('=').append(JodaBeanUtils.toString(getAircraft())).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code APU}.
     */
    public static class Meta extends AedmsEntity.Meta {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code id} property.
         */
        private final MetaProperty<Long> id = DirectMetaProperty.ofReadWrite(
                this, "id", APU.class, Long.TYPE);
        /**
         * The meta-property for the {@code model} property.
         */
        private final MetaProperty<String> model = DirectMetaProperty.ofReadWrite(
                this, "model", APU.class, String.class);
        /**
         * The meta-property for the {@code SN} property.
         */
        private final MetaProperty<String> SN = DirectMetaProperty.ofReadWrite(
                this, "SN", APU.class, String.class);
        /**
         * The meta-property for the {@code manufactureDate} property.
         */
        private final MetaProperty<Date> manufactureDate = DirectMetaProperty.ofReadWrite(
                this, "manufactureDate", APU.class, Date.class);
        /**
         * The meta-property for the {@code rentDate} property.
         */
        private final MetaProperty<Date> rentDate = DirectMetaProperty.ofReadWrite(
                this, "rentDate", APU.class, Date.class);
        /**
         * The meta-property for the {@code leaseHold} property.
         */
        private final MetaProperty<String> leaseHold = DirectMetaProperty.ofReadWrite(
                this, "leaseHold", APU.class, String.class);
        /**
         * The meta-property for the {@code leaseHolder} property.
         */
        private final MetaProperty<String> leaseHolder = DirectMetaProperty.ofReadWrite(
                this, "leaseHolder", APU.class, String.class);
        /**
         * The meta-property for the {@code opr} property.
         */
        private final MetaProperty<String> opr = DirectMetaProperty.ofReadWrite(
                this, "opr", APU.class, String.class);
        /**
         * The meta-property for the {@code apuStatusRecs} property.
         */
        @SuppressWarnings({"unchecked", "rawtypes" })
        private final MetaProperty<Set<APUStatusRec>> apuStatusRecs = DirectMetaProperty.ofReadWrite(
                this, "apuStatusRecs", APU.class, (Class) Set.class);
        /**
         * The meta-property for the {@code apuOperationRecs} property.
         */
        @SuppressWarnings({"unchecked", "rawtypes" })
        private final MetaProperty<Set<APUOperationRec>> apuOperationRecs = DirectMetaProperty.ofReadWrite(
                this, "apuOperationRecs", APU.class, (Class) Set.class);
        /**
         * The meta-property for the {@code aircraft} property.
         */
        private final MetaProperty<AirCraft> aircraft = DirectMetaProperty.ofReadWrite(
                this, "aircraft", APU.class, AirCraft.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, (DirectMetaPropertyMap) super.metaPropertyMap(),
                "id",
                "model",
                "SN",
                "manufactureDate",
                "rentDate",
                "leaseHold",
                "leaseHolder",
                "opr",
                "apuStatusRecs",
                "apuOperationRecs",
                "aircraft");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return id;
                case 104069929:  // model
                    return model;
                case 2651:  // SN
                    return SN;
                case 416714767:  // manufactureDate
                    return manufactureDate;
                case -481068409:  // rentDate
                    return rentDate;
                case 1575025209:  // leaseHold
                    return leaseHold;
                case 1770740902:  // leaseHolder
                    return leaseHolder;
                case 110257:  // opr
                    return opr;
                case 1333572539:  // apuStatusRecs
                    return apuStatusRecs;
                case 934968164:  // apuOperationRecs
                    return apuOperationRecs;
                case -688838890:  // aircraft
                    return aircraft;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public BeanBuilder<? extends APU> builder() {
            return new DirectBeanBuilder<APU>(new APU());
        }

        @Override
        public Class<? extends APU> beanType() {
            return APU.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code id} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Long> id() {
            return id;
        }

        /**
         * The meta-property for the {@code model} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> model() {
            return model;
        }

        /**
         * The meta-property for the {@code SN} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> SN() {
            return SN;
        }

        /**
         * The meta-property for the {@code manufactureDate} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Date> manufactureDate() {
            return manufactureDate;
        }

        /**
         * The meta-property for the {@code rentDate} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Date> rentDate() {
            return rentDate;
        }

        /**
         * The meta-property for the {@code leaseHold} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> leaseHold() {
            return leaseHold;
        }

        /**
         * The meta-property for the {@code leaseHolder} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> leaseHolder() {
            return leaseHolder;
        }

        /**
         * The meta-property for the {@code opr} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> opr() {
            return opr;
        }

        /**
         * The meta-property for the {@code apuStatusRecs} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Set<APUStatusRec>> apuStatusRecs() {
            return apuStatusRecs;
        }

        /**
         * The meta-property for the {@code apuOperationRecs} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Set<APUOperationRec>> apuOperationRecs() {
            return apuOperationRecs;
        }

        /**
         * The meta-property for the {@code aircraft} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<AirCraft> aircraft() {
            return aircraft;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return ((APU) bean).getId();
                case 104069929:  // model
                    return ((APU) bean).getModel();
                case 2651:  // SN
                    return ((APU) bean).getSN();
                case 416714767:  // manufactureDate
                    return ((APU) bean).getManufactureDate();
                case -481068409:  // rentDate
                    return ((APU) bean).getRentDate();
                case 1575025209:  // leaseHold
                    return ((APU) bean).getLeaseHold();
                case 1770740902:  // leaseHolder
                    return ((APU) bean).getLeaseHolder();
                case 110257:  // opr
                    return ((APU) bean).getOpr();
                case 1333572539:  // apuStatusRecs
                    return ((APU) bean).getApuStatusRecs();
                case 934968164:  // apuOperationRecs
                    return ((APU) bean).getApuOperationRecs();
                case -688838890:  // aircraft
                    return ((APU) bean).getAircraft();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @SuppressWarnings("unchecked")
        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    ((APU) bean).setId((Long) newValue);
                    return;
                case 104069929:  // model
                    ((APU) bean).setModel((String) newValue);
                    return;
                case 2651:  // SN
                    ((APU) bean).setSN((String) newValue);
                    return;
                case 416714767:  // manufactureDate
                    ((APU) bean).setManufactureDate((Date) newValue);
                    return;
                case -481068409:  // rentDate
                    ((APU) bean).setRentDate((Date) newValue);
                    return;
                case 1575025209:  // leaseHold
                    ((APU) bean).setLeaseHold((String) newValue);
                    return;
                case 1770740902:  // leaseHolder
                    ((APU) bean).setLeaseHolder((String) newValue);
                    return;
                case 110257:  // opr
                    ((APU) bean).setOpr((String) newValue);
                    return;
                case 1333572539:  // apuStatusRecs
                    ((APU) bean).setApuStatusRecs((Set<APUStatusRec>) newValue);
                    return;
                case 934968164:  // apuOperationRecs
                    ((APU) bean).setApuOperationRecs((Set<APUOperationRec>) newValue);
                    return;
                case -688838890:  // aircraft
                    ((APU) bean).setAircraft((AirCraft) newValue);
                    return;
            }
            super.propertySet(bean, propertyName, newValue, quiet);
        }

    }

    ///CLOVER:ON
    //-------------------------- AUTOGENERATED END --------------------------
}
