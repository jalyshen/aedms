package com.aedms.core.entities.eo;

import com.aedms.core.entities.AedmsEntity;
import com.aedms.core.entities.source.APU;
import com.aedms.core.entities.source.AirCraft;
import com.aedms.core.entities.source.Engine;
import com.aedms.core.entities.source.LandingGear;
import fr.lteconsulting.UseBuilderGenerator;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.joda.beans.Bean;
import org.joda.beans.BeanDefinition;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import java.util.Map;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

/**
 *
 * @author jaly
 */
@Entity
@Table(name = "AFFECT")
@BeanDefinition
public class Affect extends AedmsEntity {

    private static final long serialVersionUID = 1L;
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID")
    @PropertyDefinition
    private long id;
    
    @Column(name = "AIRCRAFT_ID")
    @OneToOne(optional = false, fetch = FetchType.LAZY, mappedBy = "affect")
    @PropertyDefinition
    private AirCraft airCraft;
    
    @Column(name = "ENGINE_ID")
    @OneToOne(optional = false, fetch = FetchType.LAZY, mappedBy = "affect")
    @PropertyDefinition
    private Engine engine;
    
    @Column(name = "APU_ID")
    @OneToOne(optional = false, fetch = FetchType.LAZY, mappedBy = "affect")
    @PropertyDefinition
    private APU apu;
    
    @Column(name = "GEAR_ID")
    @OneToOne(optional = false, fetch = FetchType.LAZY, mappedBy = "affect")
    @PropertyDefinition
    private LandingGear landingGear;
    
    @Column(name = "PART_NO", length = 50)
    @PropertyDefinition
    private String partNumber;
    
    @Column(name = "PART_EQ_UEL", length = 50)
    @PropertyDefinition
    private String partEquel;
    
    @Column(name = "PART_EQU_IP_NO", length = 50)
    @PropertyDefinition
    private String partEquIPNumber;
    
    @Column(name = "PART_EQ_NO", length = 50)
    @PropertyDefinition
    private String partEqNumber;
    
    @Column(name = "VALITY_MEMO", length = 4000)
    @PropertyDefinition
    private String valityMemo;
    
    @ManyToMany(mappedBy="affect", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "EO_GROUP_AFFECT")
    @PropertyDefinition(type = "Set<>")
    private Set<EOGroup> eoGroups;
    
    
    public Affect(){}
    
    /**
     * 
     * @param airCraft
     * @param engine
     * @param apu
     * @param landingGear
     * @param partNumber
     * @param partEquel
     * @param partEquIPNumber
     * @param partEqNumber
     * @param eoGroups 
     */
    @UseBuilderGenerator
    public Affect(AirCraft airCraft, Engine engine, APU apu, LandingGear landingGear,
            String partNumber, String partEquel, String partEquIPNumber, String partEqNumber,
            Set<EOGroup> eoGroups){
        this.airCraft = airCraft;
        this.engine = engine;
        this.apu = apu;
        this.landingGear =landingGear;
        this.partNumber = partNumber;
        this.partEquel = partEquel;
        this.partEquIPNumber = partEquIPNumber;
        this.partEqNumber = partEqNumber;
        this.eoGroups = eoGroups;
    }
    
    //------------------------- AUTOGENERATED START -------------------------
    ///CLOVER:OFF
    /**
     * The meta-bean for {@code Affect}.
     * @return the meta-bean, not null
     */
    public static Affect.Meta meta() {
        return Affect.Meta.INSTANCE;
    }

    static {
        JodaBeanUtils.registerMetaBean(Affect.Meta.INSTANCE);
    }

    @Override
    public Affect.Meta metaBean() {
        return Affect.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the id.
     * @return the value of the property
     */
    public long getId() {
        return id;
    }

    /**
     * Sets the id.
     * @param id  the new value of the property
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * Gets the the {@code id} property.
     * @return the property, not null
     */
    public final Property<Long> id() {
        return metaBean().id().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the airCraft.
     * @return the value of the property
     */
    public AirCraft getAirCraft() {
        return airCraft;
    }

    /**
     * Sets the airCraft.
     * @param airCraft  the new value of the property
     */
    public void setAirCraft(AirCraft airCraft) {
        this.airCraft = airCraft;
    }

    /**
     * Gets the the {@code airCraft} property.
     * @return the property, not null
     */
    public final Property<AirCraft> airCraft() {
        return metaBean().airCraft().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the engine.
     * @return the value of the property
     */
    public Engine getEngine() {
        return engine;
    }

    /**
     * Sets the engine.
     * @param engine  the new value of the property
     */
    public void setEngine(Engine engine) {
        this.engine = engine;
    }

    /**
     * Gets the the {@code engine} property.
     * @return the property, not null
     */
    public final Property<Engine> engine() {
        return metaBean().engine().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the apu.
     * @return the value of the property
     */
    public APU getApu() {
        return apu;
    }

    /**
     * Sets the apu.
     * @param apu  the new value of the property
     */
    public void setApu(APU apu) {
        this.apu = apu;
    }

    /**
     * Gets the the {@code apu} property.
     * @return the property, not null
     */
    public final Property<APU> apu() {
        return metaBean().apu().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the landingGear.
     * @return the value of the property
     */
    public LandingGear getLandingGear() {
        return landingGear;
    }

    /**
     * Sets the landingGear.
     * @param landingGear  the new value of the property
     */
    public void setLandingGear(LandingGear landingGear) {
        this.landingGear = landingGear;
    }

    /**
     * Gets the the {@code landingGear} property.
     * @return the property, not null
     */
    public final Property<LandingGear> landingGear() {
        return metaBean().landingGear().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the partNumber.
     * @return the value of the property
     */
    public String getPartNumber() {
        return partNumber;
    }

    /**
     * Sets the partNumber.
     * @param partNumber  the new value of the property
     */
    public void setPartNumber(String partNumber) {
        this.partNumber = partNumber;
    }

    /**
     * Gets the the {@code partNumber} property.
     * @return the property, not null
     */
    public final Property<String> partNumber() {
        return metaBean().partNumber().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the partEquel.
     * @return the value of the property
     */
    public String getPartEquel() {
        return partEquel;
    }

    /**
     * Sets the partEquel.
     * @param partEquel  the new value of the property
     */
    public void setPartEquel(String partEquel) {
        this.partEquel = partEquel;
    }

    /**
     * Gets the the {@code partEquel} property.
     * @return the property, not null
     */
    public final Property<String> partEquel() {
        return metaBean().partEquel().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the partEquIPNumber.
     * @return the value of the property
     */
    public String getPartEquIPNumber() {
        return partEquIPNumber;
    }

    /**
     * Sets the partEquIPNumber.
     * @param partEquIPNumber  the new value of the property
     */
    public void setPartEquIPNumber(String partEquIPNumber) {
        this.partEquIPNumber = partEquIPNumber;
    }

    /**
     * Gets the the {@code partEquIPNumber} property.
     * @return the property, not null
     */
    public final Property<String> partEquIPNumber() {
        return metaBean().partEquIPNumber().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the partEqNumber.
     * @return the value of the property
     */
    public String getPartEqNumber() {
        return partEqNumber;
    }

    /**
     * Sets the partEqNumber.
     * @param partEqNumber  the new value of the property
     */
    public void setPartEqNumber(String partEqNumber) {
        this.partEqNumber = partEqNumber;
    }

    /**
     * Gets the the {@code partEqNumber} property.
     * @return the property, not null
     */
    public final Property<String> partEqNumber() {
        return metaBean().partEqNumber().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the valityMemo.
     * @return the value of the property
     */
    public String getValityMemo() {
        return valityMemo;
    }

    /**
     * Sets the valityMemo.
     * @param valityMemo  the new value of the property
     */
    public void setValityMemo(String valityMemo) {
        this.valityMemo = valityMemo;
    }

    /**
     * Gets the the {@code valityMemo} property.
     * @return the property, not null
     */
    public final Property<String> valityMemo() {
        return metaBean().valityMemo().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the eoGroups.
     * @return the value of the property
     */
    public Set<EOGroup> getEoGroups() {
        return eoGroups;
    }

    /**
     * Sets the eoGroups.
     * @param eoGroups  the new value of the property
     */
    public void setEoGroups(Set<EOGroup> eoGroups) {
        this.eoGroups = eoGroups;
    }

    /**
     * Gets the the {@code eoGroups} property.
     * @return the property, not null
     */
    public final Property<Set<EOGroup>> eoGroups() {
        return metaBean().eoGroups().createProperty(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public Affect clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            Affect other = (Affect) obj;
            return (getId() == other.getId()) &&
                    JodaBeanUtils.equal(getAirCraft(), other.getAirCraft()) &&
                    JodaBeanUtils.equal(getEngine(), other.getEngine()) &&
                    JodaBeanUtils.equal(getApu(), other.getApu()) &&
                    JodaBeanUtils.equal(getLandingGear(), other.getLandingGear()) &&
                    JodaBeanUtils.equal(getPartNumber(), other.getPartNumber()) &&
                    JodaBeanUtils.equal(getPartEquel(), other.getPartEquel()) &&
                    JodaBeanUtils.equal(getPartEquIPNumber(), other.getPartEquIPNumber()) &&
                    JodaBeanUtils.equal(getPartEqNumber(), other.getPartEqNumber()) &&
                    JodaBeanUtils.equal(getValityMemo(), other.getValityMemo()) &&
                    JodaBeanUtils.equal(getEoGroups(), other.getEoGroups()) &&
                    super.equals(obj);
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = hash * 31 + JodaBeanUtils.hashCode(getId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getAirCraft());
        hash = hash * 31 + JodaBeanUtils.hashCode(getEngine());
        hash = hash * 31 + JodaBeanUtils.hashCode(getApu());
        hash = hash * 31 + JodaBeanUtils.hashCode(getLandingGear());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPartNumber());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPartEquel());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPartEquIPNumber());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPartEqNumber());
        hash = hash * 31 + JodaBeanUtils.hashCode(getValityMemo());
        hash = hash * 31 + JodaBeanUtils.hashCode(getEoGroups());
        return hash ^ super.hashCode();
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(384);
        buf.append("Affect{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    @Override
    protected void toString(StringBuilder buf) {
        super.toString(buf);
        buf.append("id").append('=').append(JodaBeanUtils.toString(getId())).append(',').append(' ');
        buf.append("airCraft").append('=').append(JodaBeanUtils.toString(getAirCraft())).append(',').append(' ');
        buf.append("engine").append('=').append(JodaBeanUtils.toString(getEngine())).append(',').append(' ');
        buf.append("apu").append('=').append(JodaBeanUtils.toString(getApu())).append(',').append(' ');
        buf.append("landingGear").append('=').append(JodaBeanUtils.toString(getLandingGear())).append(',').append(' ');
        buf.append("partNumber").append('=').append(JodaBeanUtils.toString(getPartNumber())).append(',').append(' ');
        buf.append("partEquel").append('=').append(JodaBeanUtils.toString(getPartEquel())).append(',').append(' ');
        buf.append("partEquIPNumber").append('=').append(JodaBeanUtils.toString(getPartEquIPNumber())).append(',').append(' ');
        buf.append("partEqNumber").append('=').append(JodaBeanUtils.toString(getPartEqNumber())).append(',').append(' ');
        buf.append("valityMemo").append('=').append(JodaBeanUtils.toString(getValityMemo())).append(',').append(' ');
        buf.append("eoGroups").append('=').append(JodaBeanUtils.toString(getEoGroups())).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code Affect}.
     */
    public static class Meta extends AedmsEntity.Meta {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code id} property.
         */
        private final MetaProperty<Long> id = DirectMetaProperty.ofReadWrite(
                this, "id", Affect.class, Long.TYPE);
        /**
         * The meta-property for the {@code airCraft} property.
         */
        private final MetaProperty<AirCraft> airCraft = DirectMetaProperty.ofReadWrite(
                this, "airCraft", Affect.class, AirCraft.class);
        /**
         * The meta-property for the {@code engine} property.
         */
        private final MetaProperty<Engine> engine = DirectMetaProperty.ofReadWrite(
                this, "engine", Affect.class, Engine.class);
        /**
         * The meta-property for the {@code apu} property.
         */
        private final MetaProperty<APU> apu = DirectMetaProperty.ofReadWrite(
                this, "apu", Affect.class, APU.class);
        /**
         * The meta-property for the {@code landingGear} property.
         */
        private final MetaProperty<LandingGear> landingGear = DirectMetaProperty.ofReadWrite(
                this, "landingGear", Affect.class, LandingGear.class);
        /**
         * The meta-property for the {@code partNumber} property.
         */
        private final MetaProperty<String> partNumber = DirectMetaProperty.ofReadWrite(
                this, "partNumber", Affect.class, String.class);
        /**
         * The meta-property for the {@code partEquel} property.
         */
        private final MetaProperty<String> partEquel = DirectMetaProperty.ofReadWrite(
                this, "partEquel", Affect.class, String.class);
        /**
         * The meta-property for the {@code partEquIPNumber} property.
         */
        private final MetaProperty<String> partEquIPNumber = DirectMetaProperty.ofReadWrite(
                this, "partEquIPNumber", Affect.class, String.class);
        /**
         * The meta-property for the {@code partEqNumber} property.
         */
        private final MetaProperty<String> partEqNumber = DirectMetaProperty.ofReadWrite(
                this, "partEqNumber", Affect.class, String.class);
        /**
         * The meta-property for the {@code valityMemo} property.
         */
        private final MetaProperty<String> valityMemo = DirectMetaProperty.ofReadWrite(
                this, "valityMemo", Affect.class, String.class);
        /**
         * The meta-property for the {@code eoGroups} property.
         */
        @SuppressWarnings({"unchecked", "rawtypes" })
        private final MetaProperty<Set<EOGroup>> eoGroups = DirectMetaProperty.ofReadWrite(
                this, "eoGroups", Affect.class, (Class) Set.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, (DirectMetaPropertyMap) super.metaPropertyMap(),
                "id",
                "airCraft",
                "engine",
                "apu",
                "landingGear",
                "partNumber",
                "partEquel",
                "partEquIPNumber",
                "partEqNumber",
                "valityMemo",
                "eoGroups");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return id;
                case -718391562:  // airCraft
                    return airCraft;
                case -1298662846:  // engine
                    return engine;
                case 96806:  // apu
                    return apu;
                case 496837702:  // landingGear
                    return landingGear;
                case -731502308:  // partNumber
                    return partNumber;
                case -1833135235:  // partEquel
                    return partEquel;
                case 68920742:  // partEquIPNumber
                    return partEquIPNumber;
                case -1524250584:  // partEqNumber
                    return partEqNumber;
                case 435502279:  // valityMemo
                    return valityMemo;
                case 1800219422:  // eoGroups
                    return eoGroups;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public BeanBuilder<? extends Affect> builder() {
            return new DirectBeanBuilder<Affect>(new Affect());
        }

        @Override
        public Class<? extends Affect> beanType() {
            return Affect.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code id} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Long> id() {
            return id;
        }

        /**
         * The meta-property for the {@code airCraft} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<AirCraft> airCraft() {
            return airCraft;
        }

        /**
         * The meta-property for the {@code engine} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Engine> engine() {
            return engine;
        }

        /**
         * The meta-property for the {@code apu} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<APU> apu() {
            return apu;
        }

        /**
         * The meta-property for the {@code landingGear} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<LandingGear> landingGear() {
            return landingGear;
        }

        /**
         * The meta-property for the {@code partNumber} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> partNumber() {
            return partNumber;
        }

        /**
         * The meta-property for the {@code partEquel} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> partEquel() {
            return partEquel;
        }

        /**
         * The meta-property for the {@code partEquIPNumber} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> partEquIPNumber() {
            return partEquIPNumber;
        }

        /**
         * The meta-property for the {@code partEqNumber} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> partEqNumber() {
            return partEqNumber;
        }

        /**
         * The meta-property for the {@code valityMemo} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> valityMemo() {
            return valityMemo;
        }

        /**
         * The meta-property for the {@code eoGroups} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Set<EOGroup>> eoGroups() {
            return eoGroups;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return ((Affect) bean).getId();
                case -718391562:  // airCraft
                    return ((Affect) bean).getAirCraft();
                case -1298662846:  // engine
                    return ((Affect) bean).getEngine();
                case 96806:  // apu
                    return ((Affect) bean).getApu();
                case 496837702:  // landingGear
                    return ((Affect) bean).getLandingGear();
                case -731502308:  // partNumber
                    return ((Affect) bean).getPartNumber();
                case -1833135235:  // partEquel
                    return ((Affect) bean).getPartEquel();
                case 68920742:  // partEquIPNumber
                    return ((Affect) bean).getPartEquIPNumber();
                case -1524250584:  // partEqNumber
                    return ((Affect) bean).getPartEqNumber();
                case 435502279:  // valityMemo
                    return ((Affect) bean).getValityMemo();
                case 1800219422:  // eoGroups
                    return ((Affect) bean).getEoGroups();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @SuppressWarnings("unchecked")
        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    ((Affect) bean).setId((Long) newValue);
                    return;
                case -718391562:  // airCraft
                    ((Affect) bean).setAirCraft((AirCraft) newValue);
                    return;
                case -1298662846:  // engine
                    ((Affect) bean).setEngine((Engine) newValue);
                    return;
                case 96806:  // apu
                    ((Affect) bean).setApu((APU) newValue);
                    return;
                case 496837702:  // landingGear
                    ((Affect) bean).setLandingGear((LandingGear) newValue);
                    return;
                case -731502308:  // partNumber
                    ((Affect) bean).setPartNumber((String) newValue);
                    return;
                case -1833135235:  // partEquel
                    ((Affect) bean).setPartEquel((String) newValue);
                    return;
                case 68920742:  // partEquIPNumber
                    ((Affect) bean).setPartEquIPNumber((String) newValue);
                    return;
                case -1524250584:  // partEqNumber
                    ((Affect) bean).setPartEqNumber((String) newValue);
                    return;
                case 435502279:  // valityMemo
                    ((Affect) bean).setValityMemo((String) newValue);
                    return;
                case 1800219422:  // eoGroups
                    ((Affect) bean).setEoGroups((Set<EOGroup>) newValue);
                    return;
            }
            super.propertySet(bean, propertyName, newValue, quiet);
        }

    }

    ///CLOVER:ON
    //-------------------------- AUTOGENERATED END --------------------------
}
