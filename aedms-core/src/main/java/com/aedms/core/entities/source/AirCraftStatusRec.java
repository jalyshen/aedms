package com.aedms.core.entities.source;

import com.aedms.core.entities.AedmsEntity;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;

import fr.lteconsulting.Mandatory;
import fr.lteconsulting.UseBuilderGenerator;
import org.joda.beans.BeanDefinition;
import org.joda.beans.PropertyDefinition;
import java.util.Map;
import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

/**
 *ã€€The Entity to representing AirCraft status record. The physical table is "AIRCRAFT_STATUS_RECORD"
 * 
 * @author jaly
 */
@Entity
@Table(name = "AIRCRAFT_STATUS_RECORD")
@BeanDefinition
public class AirCraftStatusRec extends AedmsEntity {
    
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID")
    @PropertyDefinition
    private Long id;
    
    @Column(name = "STATUS")
    @PropertyDefinition
    private String status;
    
    @Column(name = "STATUS_CHANGE_DATE")
    @Temporal(javax.persistence.TemporalType.DATE)
    @PropertyDefinition
    private Date statusChangedDatetimne;
    
    @Column(name = "TT")
    @PropertyDefinition
    private float tt;
    
    @Column(name = "TC")
    @PropertyDefinition
    private int tc;
    
    @Column(name = "TSO")
    @PropertyDefinition
    private float tso;
    
    @Column(name = "CSO")
    @PropertyDefinition
    private int cso;
    
    @Column(name = "REMAIN_FH")
    @PropertyDefinition
    private float remainFH;
    
    @Column(name = "REMAIN_FC")
    @PropertyDefinition
    private int remainFC;
    
    @ManyToOne
    @JoinColumn(name = "AIRCRAFT_ID")
    @PropertyDefinition
    private AirCraft aircraft;
    
    /**Constructor block*/
    public AirCraftStatusRec(){}
    
    @UseBuilderGenerator
    public AirCraftStatusRec(@Mandatory String status, @Mandatory Date statusChangedDatetimne, @Mandatory float tt, int tc, float tso, int cso,
            @Mandatory float remainFH, @Mandatory int remainFC, @Mandatory AirCraft aircraft) {
        super();
        this.status = status;
        this.statusChangedDatetimne = statusChangedDatetimne;
        this.tt = tt;
        this.tc = tc;
        this.tso = tso;
        this.cso = cso;
        this.remainFH = remainFH;
        this.remainFC = remainFC;
        this.aircraft = aircraft;
    }
    //------------------------- AUTOGENERATED START -------------------------
    ///CLOVER:OFF
    /**
     * The meta-bean for {@code AirCraftStatusRec}.
     * @return the meta-bean, not null
     */
    public static AirCraftStatusRec.Meta meta() {
        return AirCraftStatusRec.Meta.INSTANCE;
    }

    static {
        JodaBeanUtils.registerMetaBean(AirCraftStatusRec.Meta.INSTANCE);
    }

    @Override
    public AirCraftStatusRec.Meta metaBean() {
        return AirCraftStatusRec.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the id.
     * @return the value of the property
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the id.
     * @param id  the new value of the property
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the the {@code id} property.
     * @return the property, not null
     */
    public final Property<Long> id() {
        return metaBean().id().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the status.
     * @return the value of the property
     */
    public String getStatus() {
        return status;
    }

    /**
     * Sets the status.
     * @param status  the new value of the property
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Gets the the {@code status} property.
     * @return the property, not null
     */
    public final Property<String> status() {
        return metaBean().status().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the statusChangedDatetimne.
     * @return the value of the property
     */
    public Date getStatusChangedDatetimne() {
        return statusChangedDatetimne;
    }

    /**
     * Sets the statusChangedDatetimne.
     * @param statusChangedDatetimne  the new value of the property
     */
    public void setStatusChangedDatetimne(Date statusChangedDatetimne) {
        this.statusChangedDatetimne = statusChangedDatetimne;
    }

    /**
     * Gets the the {@code statusChangedDatetimne} property.
     * @return the property, not null
     */
    public final Property<Date> statusChangedDatetimne() {
        return metaBean().statusChangedDatetimne().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the tt.
     * @return the value of the property
     */
    public float getTt() {
        return tt;
    }

    /**
     * Sets the tt.
     * @param tt  the new value of the property
     */
    public void setTt(float tt) {
        this.tt = tt;
    }

    /**
     * Gets the the {@code tt} property.
     * @return the property, not null
     */
    public final Property<Float> tt() {
        return metaBean().tt().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the tc.
     * @return the value of the property
     */
    public int getTc() {
        return tc;
    }

    /**
     * Sets the tc.
     * @param tc  the new value of the property
     */
    public void setTc(int tc) {
        this.tc = tc;
    }

    /**
     * Gets the the {@code tc} property.
     * @return the property, not null
     */
    public final Property<Integer> tc() {
        return metaBean().tc().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the tso.
     * @return the value of the property
     */
    public float getTso() {
        return tso;
    }

    /**
     * Sets the tso.
     * @param tso  the new value of the property
     */
    public void setTso(float tso) {
        this.tso = tso;
    }

    /**
     * Gets the the {@code tso} property.
     * @return the property, not null
     */
    public final Property<Float> tso() {
        return metaBean().tso().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the cso.
     * @return the value of the property
     */
    public int getCso() {
        return cso;
    }

    /**
     * Sets the cso.
     * @param cso  the new value of the property
     */
    public void setCso(int cso) {
        this.cso = cso;
    }

    /**
     * Gets the the {@code cso} property.
     * @return the property, not null
     */
    public final Property<Integer> cso() {
        return metaBean().cso().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the remainFH.
     * @return the value of the property
     */
    public float getRemainFH() {
        return remainFH;
    }

    /**
     * Sets the remainFH.
     * @param remainFH  the new value of the property
     */
    public void setRemainFH(float remainFH) {
        this.remainFH = remainFH;
    }

    /**
     * Gets the the {@code remainFH} property.
     * @return the property, not null
     */
    public final Property<Float> remainFH() {
        return metaBean().remainFH().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the remainFC.
     * @return the value of the property
     */
    public int getRemainFC() {
        return remainFC;
    }

    /**
     * Sets the remainFC.
     * @param remainFC  the new value of the property
     */
    public void setRemainFC(int remainFC) {
        this.remainFC = remainFC;
    }

    /**
     * Gets the the {@code remainFC} property.
     * @return the property, not null
     */
    public final Property<Integer> remainFC() {
        return metaBean().remainFC().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the aircraft.
     * @return the value of the property
     */
    public AirCraft getAircraft() {
        return aircraft;
    }

    /**
     * Sets the aircraft.
     * @param aircraft  the new value of the property
     */
    public void setAircraft(AirCraft aircraft) {
        this.aircraft = aircraft;
    }

    /**
     * Gets the the {@code aircraft} property.
     * @return the property, not null
     */
    public final Property<AirCraft> aircraft() {
        return metaBean().aircraft().createProperty(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public AirCraftStatusRec clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            AirCraftStatusRec other = (AirCraftStatusRec) obj;
            return JodaBeanUtils.equal(getId(), other.getId()) &&
                    JodaBeanUtils.equal(getStatus(), other.getStatus()) &&
                    JodaBeanUtils.equal(getStatusChangedDatetimne(), other.getStatusChangedDatetimne()) &&
                    JodaBeanUtils.equal(getTt(), other.getTt()) &&
                    (getTc() == other.getTc()) &&
                    JodaBeanUtils.equal(getTso(), other.getTso()) &&
                    (getCso() == other.getCso()) &&
                    JodaBeanUtils.equal(getRemainFH(), other.getRemainFH()) &&
                    (getRemainFC() == other.getRemainFC()) &&
                    JodaBeanUtils.equal(getAircraft(), other.getAircraft()) &&
                    super.equals(obj);
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = hash * 31 + JodaBeanUtils.hashCode(getId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getStatus());
        hash = hash * 31 + JodaBeanUtils.hashCode(getStatusChangedDatetimne());
        hash = hash * 31 + JodaBeanUtils.hashCode(getTt());
        hash = hash * 31 + JodaBeanUtils.hashCode(getTc());
        hash = hash * 31 + JodaBeanUtils.hashCode(getTso());
        hash = hash * 31 + JodaBeanUtils.hashCode(getCso());
        hash = hash * 31 + JodaBeanUtils.hashCode(getRemainFH());
        hash = hash * 31 + JodaBeanUtils.hashCode(getRemainFC());
        hash = hash * 31 + JodaBeanUtils.hashCode(getAircraft());
        return hash ^ super.hashCode();
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(352);
        buf.append("AirCraftStatusRec{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    @Override
    protected void toString(StringBuilder buf) {
        super.toString(buf);
        buf.append("id").append('=').append(JodaBeanUtils.toString(getId())).append(',').append(' ');
        buf.append("status").append('=').append(JodaBeanUtils.toString(getStatus())).append(',').append(' ');
        buf.append("statusChangedDatetimne").append('=').append(JodaBeanUtils.toString(getStatusChangedDatetimne())).append(',').append(' ');
        buf.append("tt").append('=').append(JodaBeanUtils.toString(getTt())).append(',').append(' ');
        buf.append("tc").append('=').append(JodaBeanUtils.toString(getTc())).append(',').append(' ');
        buf.append("tso").append('=').append(JodaBeanUtils.toString(getTso())).append(',').append(' ');
        buf.append("cso").append('=').append(JodaBeanUtils.toString(getCso())).append(',').append(' ');
        buf.append("remainFH").append('=').append(JodaBeanUtils.toString(getRemainFH())).append(',').append(' ');
        buf.append("remainFC").append('=').append(JodaBeanUtils.toString(getRemainFC())).append(',').append(' ');
        buf.append("aircraft").append('=').append(JodaBeanUtils.toString(getAircraft())).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code AirCraftStatusRec}.
     */
    public static class Meta extends AedmsEntity.Meta {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code id} property.
         */
        private final MetaProperty<Long> id = DirectMetaProperty.ofReadWrite(
                this, "id", AirCraftStatusRec.class, Long.class);
        /**
         * The meta-property for the {@code status} property.
         */
        private final MetaProperty<String> status = DirectMetaProperty.ofReadWrite(
                this, "status", AirCraftStatusRec.class, String.class);
        /**
         * The meta-property for the {@code statusChangedDatetimne} property.
         */
        private final MetaProperty<Date> statusChangedDatetimne = DirectMetaProperty.ofReadWrite(
                this, "statusChangedDatetimne", AirCraftStatusRec.class, Date.class);
        /**
         * The meta-property for the {@code tt} property.
         */
        private final MetaProperty<Float> tt = DirectMetaProperty.ofReadWrite(
                this, "tt", AirCraftStatusRec.class, Float.TYPE);
        /**
         * The meta-property for the {@code tc} property.
         */
        private final MetaProperty<Integer> tc = DirectMetaProperty.ofReadWrite(
                this, "tc", AirCraftStatusRec.class, Integer.TYPE);
        /**
         * The meta-property for the {@code tso} property.
         */
        private final MetaProperty<Float> tso = DirectMetaProperty.ofReadWrite(
                this, "tso", AirCraftStatusRec.class, Float.TYPE);
        /**
         * The meta-property for the {@code cso} property.
         */
        private final MetaProperty<Integer> cso = DirectMetaProperty.ofReadWrite(
                this, "cso", AirCraftStatusRec.class, Integer.TYPE);
        /**
         * The meta-property for the {@code remainFH} property.
         */
        private final MetaProperty<Float> remainFH = DirectMetaProperty.ofReadWrite(
                this, "remainFH", AirCraftStatusRec.class, Float.TYPE);
        /**
         * The meta-property for the {@code remainFC} property.
         */
        private final MetaProperty<Integer> remainFC = DirectMetaProperty.ofReadWrite(
                this, "remainFC", AirCraftStatusRec.class, Integer.TYPE);
        /**
         * The meta-property for the {@code aircraft} property.
         */
        private final MetaProperty<AirCraft> aircraft = DirectMetaProperty.ofReadWrite(
                this, "aircraft", AirCraftStatusRec.class, AirCraft.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, (DirectMetaPropertyMap) super.metaPropertyMap(),
                "id",
                "status",
                "statusChangedDatetimne",
                "tt",
                "tc",
                "tso",
                "cso",
                "remainFH",
                "remainFC",
                "aircraft");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return id;
                case -892481550:  // status
                    return status;
                case 1957571871:  // statusChangedDatetimne
                    return statusChangedDatetimne;
                case 3712:  // tt
                    return tt;
                case 3695:  // tc
                    return tc;
                case 115152:  // tso
                    return tso;
                case 98815:  // cso
                    return cso;
                case -526131154:  // remainFH
                    return remainFH;
                case -526131159:  // remainFC
                    return remainFC;
                case -688838890:  // aircraft
                    return aircraft;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public BeanBuilder<? extends AirCraftStatusRec> builder() {
            return new DirectBeanBuilder<AirCraftStatusRec>(new AirCraftStatusRec());
        }

        @Override
        public Class<? extends AirCraftStatusRec> beanType() {
            return AirCraftStatusRec.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code id} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Long> id() {
            return id;
        }

        /**
         * The meta-property for the {@code status} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> status() {
            return status;
        }

        /**
         * The meta-property for the {@code statusChangedDatetimne} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Date> statusChangedDatetimne() {
            return statusChangedDatetimne;
        }

        /**
         * The meta-property for the {@code tt} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Float> tt() {
            return tt;
        }

        /**
         * The meta-property for the {@code tc} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> tc() {
            return tc;
        }

        /**
         * The meta-property for the {@code tso} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Float> tso() {
            return tso;
        }

        /**
         * The meta-property for the {@code cso} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> cso() {
            return cso;
        }

        /**
         * The meta-property for the {@code remainFH} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Float> remainFH() {
            return remainFH;
        }

        /**
         * The meta-property for the {@code remainFC} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> remainFC() {
            return remainFC;
        }

        /**
         * The meta-property for the {@code aircraft} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<AirCraft> aircraft() {
            return aircraft;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return ((AirCraftStatusRec) bean).getId();
                case -892481550:  // status
                    return ((AirCraftStatusRec) bean).getStatus();
                case 1957571871:  // statusChangedDatetimne
                    return ((AirCraftStatusRec) bean).getStatusChangedDatetimne();
                case 3712:  // tt
                    return ((AirCraftStatusRec) bean).getTt();
                case 3695:  // tc
                    return ((AirCraftStatusRec) bean).getTc();
                case 115152:  // tso
                    return ((AirCraftStatusRec) bean).getTso();
                case 98815:  // cso
                    return ((AirCraftStatusRec) bean).getCso();
                case -526131154:  // remainFH
                    return ((AirCraftStatusRec) bean).getRemainFH();
                case -526131159:  // remainFC
                    return ((AirCraftStatusRec) bean).getRemainFC();
                case -688838890:  // aircraft
                    return ((AirCraftStatusRec) bean).getAircraft();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    ((AirCraftStatusRec) bean).setId((Long) newValue);
                    return;
                case -892481550:  // status
                    ((AirCraftStatusRec) bean).setStatus((String) newValue);
                    return;
                case 1957571871:  // statusChangedDatetimne
                    ((AirCraftStatusRec) bean).setStatusChangedDatetimne((Date) newValue);
                    return;
                case 3712:  // tt
                    ((AirCraftStatusRec) bean).setTt((Float) newValue);
                    return;
                case 3695:  // tc
                    ((AirCraftStatusRec) bean).setTc((Integer) newValue);
                    return;
                case 115152:  // tso
                    ((AirCraftStatusRec) bean).setTso((Float) newValue);
                    return;
                case 98815:  // cso
                    ((AirCraftStatusRec) bean).setCso((Integer) newValue);
                    return;
                case -526131154:  // remainFH
                    ((AirCraftStatusRec) bean).setRemainFH((Float) newValue);
                    return;
                case -526131159:  // remainFC
                    ((AirCraftStatusRec) bean).setRemainFC((Integer) newValue);
                    return;
                case -688838890:  // aircraft
                    ((AirCraftStatusRec) bean).setAircraft((AirCraft) newValue);
                    return;
            }
            super.propertySet(bean, propertyName, newValue, quiet);
        }

    }

    ///CLOVER:ON
    //-------------------------- AUTOGENERATED END --------------------------
}
